version: '3'
services:
  nginx:
    image: nginx
    volumes:
      - ./proxy/default.conf:/etc/nginx/conf.d/default.conf
      - ./proxy/www:/var/www
    ports:
      - "8000:8000"
    depends_on:
      middleware1:
        condition: service_started
      middleware2:
        condition: service_started
      kibana:
        condition: service_healthy
    networks:
      - reverse-proxy
  middleware1:
    build: codenames/
    depends_on:
      mariadb:
        condition: service_healthy
    logging:
      driver: gelf
      options:
        gelf-address: "udp://127.0.0.1:12201"
    networks:
      - reverse-proxy
  middleware2:
    build: codenames/
    command: bash -c "test -f /usr/local/tomcat/webapps/app1.war && mv /usr/local/tomcat/webapps/app1.war /usr/local/tomcat/webapps/app2.war; catalina.sh run"
    volumes:
      - ./utils/server.xml:/usr/local/tomcat/conf/server.xml
    depends_on:
      mariadb:
        condition: service_healthy
    logging:
      driver: gelf
      options:
        gelf-address: "udp://127.0.0.1:12201"
    networks:
      - reverse-proxy
  kibana:
    image: kibana:8.5.3
    environment:
      - SERVER_BASEPATH=/kibana
      - SERVER_PORT=9000
      - ELASTICSEARCH_URL=http://elasticsearch:9200
    healthcheck:
      test: ["CMD", "curl", "-f", "localhost:9000"]
      interval: 5s
      timeout: 5s
      retries: 8
      start_period: 15s
    depends_on:
      elasticsearch:
          condition: service_healthy
    networks:
      - reverse-proxy
  elasticsearch:
    image: elasticsearch:8.5.3
    environment:
      - xpack.security.enabled=false
      - discovery.type=single-node
    healthcheck:
        test: ["CMD", "curl", "-f", "localhost:9200"]
        interval: 5s
        timeout: 5s
        retries: 8
    volumes:
      - elastic-data:/usr/share/elasticsearch/data
    networks:
      - reverse-proxy
  logstash:
    image: logstash:8.5.3
    ports:
      - "12201:12201"
      - "12201:12201/udp"
    volumes:
      - ./utils/gelf.conf:/conf/gelf.conf
    command: logstash -f /conf/gelf.conf
    networks:
      - reverse-proxy
  mariadb:
    image: mariadb:10.9.4
    environment:
      MARIADB_ROOT_PASSWORD: root
      MARIADB_DATABASE: appdb
      MARIADB_USER: appuser
      MARIADB_PASSWORD: password
    healthcheck:
        test: ["CMD", "mysqladmin", "-u", "appuser", "-ppassword", "ping", "-h", "localhost"]
        interval: 5s
        timeout: 5s
        retries: 5
    volumes:
      - db-data:/var/lib/mysql
    networks:
      - reverse-proxy
networks:
  reverse-proxy:
volumes:
  db-data:
  elastic-data:
